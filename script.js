// S√©lection des √©l√©ments HTML n√©cessaires
const chatForm = document.getElementById("chat-form"); // Formulaire du chat
const userInput = document.getElementById("user-input"); // Champ o√π l'utilisateur tape son message
const chatBox = document.getElementById("chat-box"); // Zone o√π s'affichent les messages

// Fonction pour envoyer la question √† l'API et obtenir une r√©ponse
async function getResponse() {
  const apiKey = "AIzaSyAmzItPdnxMCDJnI8GohFnz3AS9-M6gavA"; // cl√© API
  const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;

  // Cr√©ation de l'objet qui contient la question et les instructions pour l'IA
  const requestBody = {
    contents: [
      {
        parts: [
          {
            text: `
              Tu es un expert en football, et ta seule mission est de r√©pondre aux questions strictement li√©es au football.

R√©ponds uniquement aux questions sur le football, sans exception. Si la question n‚Äôest pas li√©e au football, r√©agis avec une r√©ponse g√©n√©rique du type "Je suis ici pour r√©pondre aux questions sur le football uniquement."
Sois factuel et concis : chaque r√©ponse doit se limiter √† l'essentiel, sans ajout d'opinions personnelles, d'interpr√©tations ou d'informations non v√©rifi√©es.
Privil√©gie les statistiques : lorsque des chiffres ou des donn√©es sont demand√©s, utilise les chiffres exacts et les informations les plus r√©centes disponibles.
Ne donne aucune analyse personnelle ou opinion subjective : les r√©ponses doivent √™tre purement objectives, bas√©es sur des faits historiques ou des donn√©es de matchs.
Ton strict et professionnel : parle de mani√®re formelle et √©vite les familiarit√©s ou le jargon excessif.
Si une question concerne plusieurs aspects du football, r√©ponds de mani√®re s√©quenc√©e pour aborder chaque point avec pr√©cision.
Si une question n'a pas de r√©ponse claire ou est ambigu√´, indique clairement que la r√©ponse n'est pas disponible ou est incertaine, plut√¥t que de sp√©culer.
Ne d√©vie jamais du sujet du football : m√™me si une question est proche, reste focalis√© sur le sport, ne t'aventure pas √† donner des conseils g√©n√©raux ou personnels.
          `,
          },
          { text: userInput.value }, // Ajoute la question de l'utilisateur
        ],
      },
    ],
  };

  try {
    // Envoi de la requ√™te √† l'API
    const response = await fetch(apiUrl, {
      method: "POST", // M√©thode HTTP pour envoyer des donn√©es
      headers: { "Content-Type": "application/json" }, // Indique que l'on envoie du JSON
      body: JSON.stringify(requestBody), // Convertit l'objet JS en JSON
    });
    const result = await response.json(); // Convertit la r√©ponse en objet JS
    return result;
  } catch (error) {
    console.log(error); // Affiche l'erreur dans la console si quelque chose ne va pas
  }
}

// Gestion de l'√©v√©nement d'envoi du formulaire
chatForm.addEventListener("submit", (event) => {
  event.preventDefault(); // Emp√™che le rechargement de la page
  if (userInput.value.trim()) {
    document.querySelector(".welcome").style.display = "none";
    chatBox.style.display = "block";
    displayContent();
  } // Affiche le message de l'utilisateur et attend la r√©ponse
});

// Fonction pour formater la r√©ponse de mani√®re √©l√©gante
function formatResponse(text) {
  // 1. Mettre les num√©ros en gras
  text = text.replace(/^(\d+)\.\s+/gm, "<strong>$1-</strong> ");

  // 2. Mettre les noms des joueurs en gras (tout ce qui est entre **)
  text = text.replace(/\*(.*?)\*/g, "<strong>$1</strong>");

  // 3. Ajouter des balises <p> autour du texte pour chaque paragraphe
  text = text.replace(/\n/g, "</p><p style='margin-bottom: 15px'>");

  // 4. Encapsuler le texte entier dans une balise <p>
  return "<p>" + text + "</p>";
}

// Fonction pour afficher le message de l'utilisateur et la r√©ponse du bot
async function displayContent() {
  // Cr√©ation du message utilisateur et ajout √† la bo√Æte de chat
  const userMessage = document.createElement("div");
  userMessage.className = "message user";
  userMessage.innerHTML = `<div class="message-content"><span>üë®</span>${userInput.value}</div>`;
  chatBox.appendChild(userMessage);

  // Cr√©ation d'un message temporaire du bot (il affichera "..." en attendant la r√©ponse)
  const botMessage = document.createElement("div");
  botMessage.className = "message bot";
  botMessage.innerHTML = `<div class="message-content"><span>ü§ñ</span>loading ...</div>`;
  chatBox.appendChild(botMessage);

  chatBox.scrollTop = chatBox.scrollHeight; // Fait d√©filer la bo√Æte de chat vers le bas

  try {
    const result = await getResponse(); // Attend la r√©ponse de l'API
    console.log(result);
    if (result && result.candidates && result.candidates.length > 0) {
      const response = result.candidates[0].content.parts[0].text; // R√©cup√®re la r√©ponse texte

      // Formate la r√©ponse avant de l'afficher
      let formattedResponse = formatResponse(response);

      let index = 0;
      // Affichage progressif de la r√©ponse, lettre par lettre
      const intervalId = setInterval(() => {
        botMessage.innerHTML = `<div class="message-content"><span>ü§ñ</span>${formattedResponse.slice(
          0,
          index++
        )}</div>`;
        chatBox.scrollTop = chatBox.scrollHeight; // Fait d√©filer la bo√Æte de chat vers le bas
        if (index > formattedResponse.length) {
          clearInterval(intervalId); // Arr√™te l'affichage progressif quand tout est affich√©
        }
      }, 10);
    } else {
      // Si l'IA ne r√©pond pas correctement, affiche un message d'erreur format√©
      botMessage.innerHTML = `<div class="message-content">Je n'ai pas compris la question, mais assure-toi que ta question porte sur le football.</div>`;
    }

    chatBox.appendChild(botMessage);
  } catch (error) {
    // En cas d'erreur, affiche un message d'erreur format√©
    chatBox.removeChild(botMessage);
    botMessage.innerHTML = `<div class="message-content">Erreur: ${error.message}</div>`;
    chatBox.appendChild(botMessage);
  }

  userInput.value = ""; // Vide le champ de saisie apr√®s l'envoi
}
